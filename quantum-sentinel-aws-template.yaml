AWSTemplateFormatVersion: '2010-09-09'
Description: 'QuantumSentinel-Nexus AWS Infrastructure'

Parameters:
  ProjectName:
    Type: String
    Default: quantumsentinel-nexus
    Description: Name of the project

Resources:
  # S3 Buckets for different purposes
  ReportsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-quantum-reports-${AWS::AccountId}'
      LifecycleConfiguration:
        Rules:
          - Id: ReportsLifecycle
            Status: Enabled
            ExpirationInDays: 365
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: reports-and-scan-results

  ResearchDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-quantum-research-data-${AWS::AccountId}'
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: research-findings-and-papers

  MLModelsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-quantum-ml-models-${AWS::AccountId}'
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: machine-learning-models-and-datasets

  EvidenceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-quantum-evidence-${AWS::AccountId}'
      LifecycleConfiguration:
        Rules:
          - Id: EvidenceLifecycle
            Status: Enabled
            ExpirationInDays: 730
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: evidence-files-and-proof-of-concepts

  ConfigsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-quantum-configs-${AWS::AccountId}'
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: configuration-files-and-templates

  LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-quantum-logs-${AWS::AccountId}'
      LifecycleConfiguration:
        Rules:
          - Id: LogsLifecycle
            Status: Enabled
            ExpirationInDays: 90
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: application-logs-and-audit-trails

  # IAM Role for QuantumSentinel services
  QuantumSentinelRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-execution-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - ecs-tasks.amazonaws.com
                - ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
      Policies:
        - PolicyName: QuantumSentinelS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub '${ReportsBucket.Arn}/*'
                  - !Sub '${ResearchDataBucket.Arn}/*'
                  - !Sub '${MLModelsBucket.Arn}/*'
                  - !Sub '${EvidenceBucket.Arn}/*'
                  - !Sub '${ConfigsBucket.Arn}/*'
                  - !Sub '${LogsBucket.Arn}/*'
                  - !GetAtt ReportsBucket.Arn
                  - !GetAtt ResearchDataBucket.Arn
                  - !GetAtt MLModelsBucket.Arn
                  - !GetAtt EvidenceBucket.Arn
                  - !GetAtt ConfigsBucket.Arn
                  - !GetAtt LogsBucket.Arn
        - PolicyName: QuantumSentinelSecretsManagerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:quantum/*'
        - PolicyName: QuantumSentinelCloudWatchAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - cloudwatch:PutMetricData
                Resource: '*'

  # Secrets Manager secrets
  ChaosAPIKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: quantum/chaos-api-key
      Description: Chaos API key for subdomain enumeration
      SecretString: PLACEHOLDER_VALUE_CHANGE_ME

  HuggingFaceTokenSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: quantum/huggingface-token
      Description: HuggingFace API token for ML models
      SecretString: PLACEHOLDER_VALUE_CHANGE_ME

  CVEAPIKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: quantum/cve-api-key
      Description: CVE API key for vulnerability data
      SecretString: PLACEHOLDER_VALUE_CHANGE_ME

  NucleiAPIKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: quantum/nuclei-api-key
      Description: Nuclei API key for templates
      SecretString: PLACEHOLDER_VALUE_CHANGE_ME

  DatabasePasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: quantum/database-password
      Description: Database password for RDS
      GenerateSecretString:
        SecretStringTemplate: '{"username": "quantumadmin"}'
        GenerateStringKey: 'password'
        PasswordLength: 32
        ExcludeCharacters: '"@/\'

  RedisPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: quantum/redis-password
      Description: Redis password for ElastiCache
      GenerateSecretString:
        PasswordLength: 32
        ExcludeCharacters: '"@/\'

  JWTSecretSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: quantum/jwt-secret
      Description: JWT secret for authentication
      GenerateSecretString:
        PasswordLength: 64
        ExcludeCharacters: '"@/\'

  # VPC and Networking
  QuantumVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-vpc'
        - Key: Project
          Value: !Ref ProjectName

  QuantumSubnetPublic1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref QuantumVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-public-subnet-1'

  QuantumSubnetPublic2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref QuantumVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-public-subnet-2'

  QuantumSubnetPrivate1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref QuantumVPC
      CidrBlock: 10.0.10.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-private-subnet-1'

  QuantumSubnetPrivate2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref QuantumVPC
      CidrBlock: 10.0.11.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-private-subnet-2'

  # Internet Gateway
  QuantumInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-igw'

  QuantumVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref QuantumVPC
      InternetGatewayId: !Ref QuantumInternetGateway

  # Route Tables
  QuantumPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref QuantumVPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-public-rt'

  QuantumPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: QuantumVPCGatewayAttachment
    Properties:
      RouteTableId: !Ref QuantumPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref QuantumInternetGateway

  QuantumPublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref QuantumSubnetPublic1
      RouteTableId: !Ref QuantumPublicRouteTable

  QuantumPublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref QuantumSubnetPublic2
      RouteTableId: !Ref QuantumPublicRouteTable

  # Security Groups
  QuantumSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for QuantumSentinel-Nexus
      VpcId: !Ref QuantumVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8080
          CidrIp: 10.0.0.0/16
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-sg'

  # ECR Repository
  QuantumECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ProjectName
      ImageTagMutability: MUTABLE
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep last 10 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 10
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

Outputs:
  StackName:
    Description: Name of the CloudFormation stack
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub '${AWS::StackName}-StackName'

  ReportsBucket:
    Description: S3 bucket for reports
    Value: !Ref ReportsBucket
    Export:
      Name: !Sub '${AWS::StackName}-ReportsBucket'

  ResearchDataBucket:
    Description: S3 bucket for research data
    Value: !Ref ResearchDataBucket
    Export:
      Name: !Sub '${AWS::StackName}-ResearchDataBucket'

  MLModelsBucket:
    Description: S3 bucket for ML models
    Value: !Ref MLModelsBucket
    Export:
      Name: !Sub '${AWS::StackName}-MLModelsBucket'

  EvidenceBucket:
    Description: S3 bucket for evidence
    Value: !Ref EvidenceBucket
    Export:
      Name: !Sub '${AWS::StackName}-EvidenceBucket'

  ConfigsBucket:
    Description: S3 bucket for configs
    Value: !Ref ConfigsBucket
    Export:
      Name: !Sub '${AWS::StackName}-ConfigsBucket'

  LogsBucket:
    Description: S3 bucket for logs
    Value: !Ref LogsBucket
    Export:
      Name: !Sub '${AWS::StackName}-LogsBucket'

  QuantumSentinelRole:
    Description: IAM role for QuantumSentinel services
    Value: !Ref QuantumSentinelRole
    Export:
      Name: !Sub '${AWS::StackName}-QuantumSentinelRole'

  VPCId:
    Description: VPC ID
    Value: !Ref QuantumVPC
    Export:
      Name: !Sub '${AWS::StackName}-VPCId'

  PublicSubnet1Id:
    Description: Public Subnet 1 ID
    Value: !Ref QuantumSubnetPublic1
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1Id'

  PublicSubnet2Id:
    Description: Public Subnet 2 ID
    Value: !Ref QuantumSubnetPublic2
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet2Id'

  PrivateSubnet1Id:
    Description: Private Subnet 1 ID
    Value: !Ref QuantumSubnetPrivate1
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1Id'

  PrivateSubnet2Id:
    Description: Private Subnet 2 ID
    Value: !Ref QuantumSubnetPrivate2
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet2Id'

  SecurityGroupId:
    Description: Security Group ID
    Value: !Ref QuantumSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroupId'

  ECRRepository:
    Description: ECR Repository URI
    Value: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${QuantumECRRepository}'
    Export:
      Name: !Sub '${AWS::StackName}-ECRRepository'
