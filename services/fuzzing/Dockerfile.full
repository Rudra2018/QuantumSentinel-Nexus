# Full ML-Enhanced Fuzzing Service
FROM pytorch/pytorch:2.1.0-cuda11.8-cudnn8-devel as ml-base

# Install system dependencies for advanced fuzzing
RUN apt-get update && apt-get install -y \
    curl \
    git \
    jq \
    wget \
    unzip \
    build-essential \
    cmake \
    pkg-config \
    libssl-dev \
    libffi-dev \
    libxml2-dev \
    libxslt1-dev \
    zlib1g-dev \
    libjpeg-dev \
    libpng-dev \
    libfreetype6-dev \
    python3-dev \
    python3-pip \
    # Fuzzing tools
    valgrind \
    gdb \
    strace \
    ltrace \
    bsdmainutils \
    xxd \
    binutils \
    nmap \
    dnsutils \
    netcat-openbsd \
    tcpdump \
    && rm -rf /var/lib/apt/lists/*

# Install advanced ML and fuzzing Python dependencies
RUN pip install --no-cache-dir \
    # Core ML stack
    torch>=2.1.0 \
    tensorflow>=2.13.0 \
    scikit-learn>=1.3.2 \
    numpy>=1.24.4 \
    pandas>=2.1.4 \
    # Fuzzing and security libraries
    pwntools>=4.11.0 \
    capstone>=5.0.1 \
    keystone-engine>=0.9.2 \
    unicorn>=2.0.1 \
    angr>=9.2.0 \
    # ML for fuzzing
    gym>=0.26.0 \
    stable-baselines3>=2.0.0 \
    transformers>=4.35.0 \
    datasets>=2.14.0 \
    # Core web framework
    fastapi>=0.104.1 \
    uvicorn[standard]>=0.24.0 \
    pydantic>=2.5.0 \
    httpx>=0.25.2 \
    aiofiles>=23.2.1 \
    # Analysis and visualization
    matplotlib>=3.8.2 \
    plotly>=5.17.0 \
    networkx>=3.2.1 \
    # Additional ML libraries
    xgboost>=2.0.1 \
    lightgbm>=4.1.0 \
    catboost>=1.2.2

# Production stage
FROM ml-base as production

# Set working directory
WORKDIR /app

# Copy requirements and install additional dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . /app/

# Create necessary directories for fuzzing artifacts
RUN mkdir -p /app/fuzzing_data /app/ml_models /app/mutations /app/crashes /app/coverage

# Create non-root user
RUN groupadd -r quantum && useradd -r -g quantum quantum
RUN chown -R quantum:quantum /app
USER quantum

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Set environment variables for ML optimizations
ENV PYTHONUNBUFFERED=1
ENV TORCH_HOME=/app/ml_models
ENV TF_ENABLE_ONEDNN_OPTS=1
ENV TF_CPP_MIN_LOG_LEVEL=2

# Start application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]