# Use Ubuntu base for better package availability and OSINT tools
FROM ubuntu:22.04 as base

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# Install system dependencies for OSINT reconnaissance
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3.11-dev \
    python3-pip \
    python3.11-venv \
    curl \
    git \
    jq \
    wget \
    unzip \
    build-essential \
    cmake \
    pkg-config \
    # Network reconnaissance tools
    nmap \
    dnsutils \
    whois \
    netcat-openbsd \
    traceroute \
    # SSL/TLS analysis
    openssl \
    # Additional utilities
    htop \
    screen \
    tmux \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Create Python alias and install pip
RUN ln -s /usr/bin/python3.11 /usr/bin/python && \
    python -m pip install --upgrade pip

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies with extended timeout
COPY requirements.txt .
RUN pip install --no-cache-dir \
    --timeout 1000 \
    --retries 5 \
    -r requirements.txt

# Install additional OSINT Python libraries
RUN pip install --no-cache-dir \
    # Network scanning and analysis
    python-nmap>=0.7.1 \
    netaddr>=0.8.0 \
    scapy>=2.5.0 \
    # OSINT libraries
    shodan>=1.30.1 \
    censys>=2.2.0 \
    virustotal-api>=1.1.11 \
    # Geolocation
    geoip2>=4.7.0 \
    maxminddb>=2.2.0 \
    # Web scraping and analysis
    beautifulsoup4>=4.12.0 \
    scrapy>=2.10.0 \
    selenium>=4.15.0 \
    # Social media OSINT
    tweepy>=4.14.0 \
    instaloader>=4.10.0 \
    # DNS analysis
    dnspython>=2.4.0 \
    # Additional utilities
    python-whois>=0.8.0 \
    requests>=2.31.0 \
    aiohttp>=3.8.0 \
    httpx>=0.25.0

# Production stage
FROM ubuntu:22.04 as production

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    python3.11 \
    curl \
    nmap \
    dnsutils \
    whois \
    netcat-openbsd \
    openssl \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd -r quantum && useradd -r -g quantum quantum

# Create Python alias
RUN ln -s /usr/bin/python3.11 /usr/bin/python

# Copy virtual environment from builder
COPY --from=base /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy application code
COPY . /app/

# Create necessary directories for OSINT data
RUN mkdir -p /app/osint_data /app/scan_results /app/intelligence /app/reports /app/cache

# Set permissions
RUN chown -R quantum:quantum /app
USER quantum

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Set environment variables for OSINT optimizations
ENV OSINT_CACHE_DIR=/app/cache
ENV SCAN_RESULTS_DIR=/app/scan_results
ENV INTELLIGENCE_DIR=/app/intelligence

# Start application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]