# QuantumSentinel Binary Analysis - macOS Binary Analysis Environment
# Specialized environment for analyzing macOS binaries (Mach-O, .app, KEXT)

FROM ubuntu:22.04

LABEL maintainer="QuantumSentinel-Nexus"
LABEL description="macOS binary analysis environment with Mach-O tools"
LABEL version="3.0"
LABEL binary_types="macho,app,kext,dylib,framework"

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install base system packages
RUN apt-get update && apt-get install -y \
    # Core utilities
    curl wget git vim tmux htop unzip p7zip-full \
    # Build environment
    build-essential cmake autoconf automake libtool pkg-config \
    # Python environment
    python3 python3-pip python3-dev python3-venv \
    # Binary analysis tools
    binutils gdb hexdump xxd file strings objdump readelf nm \
    # Network and debugging
    netcat nmap tcpdump strace ltrace \
    # Additional tools
    radare2 checksec patchelf \
    # macOS specific dependencies
    libplist-dev libplist-utils \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Python packages for macOS binary analysis
RUN pip3 install --no-cache-dir \
    # Core binary analysis
    capstone keystone-engine unicorn \
    pefile pyelftools lief \
    # macOS specific
    macholib \
    construct \
    biplist \
    pyimg4 \
    # Analysis frameworks
    frida-tools \
    ropper \
    angr \
    # ML and data processing
    numpy scipy pandas scikit-learn \
    # Utilities
    yara-python \
    requests beautifulsoup4

# Install cctools-port for Mach-O analysis
RUN git clone https://github.com/tpoechtrager/cctools-port.git /tmp/cctools && \
    cd /tmp/cctools && \
    ./configure --prefix=/usr/local && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/cctools

# Install macOS analysis tools
RUN git clone https://github.com/horsicq/XMachOViewer.git /opt/xmachoviewer && \
    cd /opt/xmachoviewer && \
    qmake XMachOViewer.pro && \
    make -j$(nproc) || true

# Install jtool2 for advanced Mach-O analysis
RUN wget http://www.newosxbook.com/tools/jtool2.tgz -O /tmp/jtool2.tgz && \
    cd /tmp && tar -xzf jtool2.tgz && \
    cp jtool2 /usr/local/bin/ && \
    chmod +x /usr/local/bin/jtool2 && \
    rm -rf /tmp/jtool2*

# Create analysis environment
RUN mkdir -p /analysis/{binaries,results,scripts,logs,configs,macos-specific}

# Create macOS analysis user
RUN useradd -m -s /bin/bash macos-analyst && \
    usermod -aG sudo macos-analyst && \
    echo "macos-analyst ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Create macOS-specific analysis scripts
COPY scripts/analyze-macos-binary.sh /usr/local/bin/
COPY scripts/extract-macos-metadata.sh /usr/local/bin/
COPY scripts/analyze-kext.sh /usr/local/bin/
COPY scripts/analyze-app-bundle.sh /usr/local/bin/

# Make scripts executable and set ownership
RUN chmod +x /usr/local/bin/*.sh && \
    chown -R macos-analyst:macos-analyst /analysis /home/macos-analyst

# Switch to analysis user
USER macos-analyst
WORKDIR /analysis

# Set environment variables
ENV PATH="/home/macos-analyst/.local/bin:/usr/local/bin:$PATH"
ENV PYTHONPATH="/analysis:$PYTHONPATH"
ENV ANALYSIS_TYPE="macos"
ENV SUPPORTED_FORMATS="mach-o,app,kext,dylib,framework"

# Create analysis configuration
RUN echo '#!/bin/bash\n\
echo "=== QuantumSentinel macOS Binary Analysis Environment ==="\n\
echo "Supported formats: $SUPPORTED_FORMATS"\n\
echo "Analysis tools: jtool2, cctools, radare2, lief"\n\
echo "Usage: analyze-macos-binary.sh <binary_path>"\n\
echo "========================================================"\n\
' > /home/macos-analyst/.bashrc_custom && \
    echo "source /home/macos-analyst/.bashrc_custom" >> /home/macos-analyst/.bashrc

# Expose debugging ports
EXPOSE 1234 4444 8080 8888

CMD ["/bin/bash"]