# QuantumSentinel Binary Analysis - Mobile Binary Analysis Environment
# Specialized environment for analyzing mobile binaries (APK, IPA)

FROM ubuntu:22.04

LABEL maintainer="QuantumSentinel-Nexus"
LABEL description="Mobile binary analysis environment for Android APK and iOS IPA"
LABEL version="3.0"
LABEL binary_types="apk,ipa,aab,dex,elf-android"

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC
ENV ANDROID_SDK_ROOT=/opt/android-sdk
ENV ANDROID_HOME=/opt/android-sdk
ENV PATH="$PATH:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/tools"

# Install base system packages
RUN apt-get update && apt-get install -y \
    # Core utilities
    curl wget git vim tmux htop unzip p7zip-full zip \
    # Build environment
    build-essential cmake autoconf automake libtool pkg-config \
    # Java environment for Android analysis
    openjdk-11-jdk openjdk-11-jre \
    # Python environment
    python3 python3-pip python3-dev python3-venv \
    # Binary analysis tools
    binutils gdb hexdump xxd file strings objdump readelf nm \
    # Network and debugging
    netcat nmap tcpdump strace ltrace \
    # Additional tools
    radare2 checksec patchelf \
    # Mobile specific dependencies
    aapt aapt2 zipalign \
    libxml2-utils xmlstarlet \
    sqlite3 \
    # iOS specific dependencies
    libplist-dev libplist-utils \
    libimobiledevice-utils \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Android SDK and tools
RUN mkdir -p $ANDROID_SDK_ROOT && \
    cd /tmp && \
    wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip && \
    unzip commandlinetools-linux-9477386_latest.zip && \
    mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest && \
    mv cmdline-tools/* $ANDROID_SDK_ROOT/cmdline-tools/latest/ && \
    rm -rf /tmp/*

# Install Android platform tools
RUN cd $ANDROID_SDK_ROOT && \
    yes | cmdline-tools/latest/bin/sdkmanager --licenses && \
    cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;33.0.0" "platforms;android-33"

# Install Python packages for mobile binary analysis
RUN pip3 install --no-cache-dir \
    # Core binary analysis
    capstone keystone-engine unicorn \
    pefile pyelftools lief \
    # Android specific
    androguard \
    axmlparserpy \
    # iOS specific
    biplist \
    construct \
    pyimg4 \
    plistlib2 \
    # Analysis frameworks
    frida-tools \
    objection \
    ropper \
    angr \
    # ML and data processing
    numpy scipy pandas scikit-learn \
    # Utilities
    yara-python \
    requests beautifulsoup4 \
    # Mobile security tools
    mobsf

# Install APKTool
RUN wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool -O /usr/local/bin/apktool && \
    wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.8.1.jar -O /usr/local/bin/apktool.jar && \
    chmod +x /usr/local/bin/apktool

# Install JADX for Java decompilation
RUN cd /opt && \
    wget https://github.com/skylot/jadx/releases/download/v1.4.7/jadx-1.4.7.zip && \
    unzip jadx-1.4.7.zip -d jadx && \
    chmod +x jadx/bin/jadx* && \
    ln -s /opt/jadx/bin/jadx /usr/local/bin/jadx && \
    ln -s /opt/jadx/bin/jadx-gui /usr/local/bin/jadx-gui && \
    rm jadx-1.4.7.zip

# Install dex2jar for dex analysis
RUN cd /opt && \
    wget https://github.com/pxb1988/dex2jar/releases/download/v2.1/dex2jar-2.1.zip && \
    unzip dex2jar-2.1.zip && \
    chmod +x dex2jar-2.1/*.sh && \
    ln -s /opt/dex2jar-2.1/d2j-dex2jar.sh /usr/local/bin/dex2jar && \
    rm dex2jar-2.1.zip

# Install iOS analysis tools
RUN git clone https://github.com/horsicq/XIPAViewer.git /opt/xipaviewer && \
    cd /opt/xipaviewer && \
    qmake XIPAViewer.pro || true

# Install class-dump for iOS analysis
RUN wget https://github.com/nygard/class-dump/releases/download/3.5/class-dump-3.5.tar.gz -O /tmp/class-dump.tar.gz && \
    cd /tmp && tar -xzf class-dump.tar.gz && \
    cd class-dump-3.5 && \
    make && cp class-dump /usr/local/bin/ && \
    rm -rf /tmp/class-dump*

# Create analysis environment
RUN mkdir -p /analysis/{binaries,results,scripts,logs,configs,mobile-specific,apk-workspace,ipa-workspace}

# Create mobile analysis user
RUN useradd -m -s /bin/bash mobile-analyst && \
    usermod -aG sudo mobile-analyst && \
    echo "mobile-analyst ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Create mobile-specific analysis scripts
COPY scripts/analyze-apk.sh /usr/local/bin/
COPY scripts/analyze-ipa.sh /usr/local/bin/
COPY scripts/extract-mobile-metadata.sh /usr/local/bin/
COPY scripts/mobile-static-analysis.sh /usr/local/bin/
COPY scripts/mobile-dynamic-analysis.sh /usr/local/bin/

# Set ownership and permissions
RUN chown -R mobile-analyst:mobile-analyst /analysis /home/mobile-analyst $ANDROID_SDK_ROOT && \
    chmod +x /usr/local/bin/*.sh

# Switch to analysis user
USER mobile-analyst
WORKDIR /analysis

# Set environment variables
ENV PATH="/home/mobile-analyst/.local/bin:$PATH"
ENV PYTHONPATH="/analysis:$PYTHONPATH"
ENV ANALYSIS_TYPE="mobile"
ENV SUPPORTED_FORMATS="apk,ipa,aab,dex,elf-android"
ENV JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"

# Create analysis configuration
RUN echo '#!/bin/bash\n\
echo "=== QuantumSentinel Mobile Binary Analysis Environment ==="\n\
echo "Supported formats: $SUPPORTED_FORMATS"\n\
echo "Android tools: apktool, jadx, dex2jar, androguard"\n\
echo "iOS tools: class-dump, biplist, pyimg4"\n\
echo "Analysis tools: frida, objection, radare2"\n\
echo "Usage:"\n\
echo "  - analyze-apk.sh <apk_path>"\n\
echo "  - analyze-ipa.sh <ipa_path>"\n\
echo "========================================================="\n\
' > /home/mobile-analyst/.bashrc_custom && \
    echo "source /home/mobile-analyst/.bashrc_custom" >> /home/mobile-analyst/.bashrc

# Create mobile analysis workspace
RUN mkdir -p /home/mobile-analyst/{.android,.gradle,.java} && \
    echo "sdk.dir=$ANDROID_SDK_ROOT" > /home/mobile-analyst/local.properties

# Expose common mobile debugging ports
EXPOSE 1234 4444 5555 8080 8888 9999

CMD ["/bin/bash"]