# QuantumSentinel Binary Analysis - Linux Package Analysis Environment
# Specialized environment for analyzing Linux packages (DEB, RPM, kernel modules)

FROM ubuntu:22.04

LABEL maintainer="QuantumSentinel-Nexus"
LABEL description="Linux package analysis environment for DEB, RPM, and kernel modules"
LABEL version="3.0"
LABEL binary_types="deb,rpm,ko,kernel-module,snap,appimage"

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install base system packages
RUN apt-get update && apt-get install -y \
    # Core utilities
    curl wget git vim tmux htop unzip p7zip-full \
    # Build environment
    build-essential cmake autoconf automake libtool pkg-config \
    # Kernel development
    linux-headers-generic \
    kmod \
    # Package management tools
    dpkg-dev \
    rpm2cpio \
    cpio \
    alien \
    squashfs-tools \
    # Python environment
    python3 python3-pip python3-dev python3-venv \
    # Binary analysis tools
    binutils gdb hexdump xxd file strings objdump readelf nm \
    # Advanced analysis
    strace ltrace \
    radare2 checksec patchelf \
    # Network tools
    netcat nmap tcpdump \
    # Archive tools
    tar gzip bzip2 xz-utils \
    # Kernel analysis tools
    dkms \
    module-init-tools \
    # Volatility dependencies
    python3-distorm3 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Python packages for Linux package analysis
RUN pip3 install --no-cache-dir \
    # Core binary analysis
    capstone keystone-engine unicorn \
    pefile pyelftools lief \
    # Package analysis
    python-debian \
    rpm-python \
    # Kernel analysis
    volatility3 \
    rekall \
    # Analysis frameworks
    frida-tools \
    ropper \
    angr \
    # ML and data processing
    numpy scipy pandas scikit-learn \
    # Archive handling
    rarfile \
    py7zr \
    # Utilities
    yara-python \
    requests beautifulsoup4

# Install additional package analysis tools
RUN wget https://github.com/kaitai-io/kaitai_struct_python_runtime/archive/master.zip -O /tmp/kaitai.zip && \
    cd /tmp && unzip kaitai.zip && \
    cd kaitai_struct_python_runtime-master && \
    python3 setup.py install && \
    rm -rf /tmp/kaitai*

# Install binwalk for firmware analysis
RUN git clone https://github.com/ReFirmLabs/binwalk.git /opt/binwalk && \
    cd /opt/binwalk && \
    python3 setup.py install && \
    ln -s /opt/binwalk/src/binwalk /usr/local/bin/

# Install Ghidra (for advanced reverse engineering)
RUN cd /opt && \
    wget https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_10.4_build/ghidra_10.4_PUBLIC_20230928.zip && \
    unzip ghidra_10.4_PUBLIC_20230928.zip && \
    mv ghidra_10.4_PUBLIC ghidra && \
    rm ghidra_10.4_PUBLIC_20230928.zip && \
    ln -s /opt/ghidra/ghidraRun /usr/local/bin/ghidra

# Install kernel analysis tools
RUN git clone https://github.com/volatilityfoundation/volatility3.git /opt/volatility3 && \
    cd /opt/volatility3 && \
    python3 setup.py install

# Create analysis environment
RUN mkdir -p /analysis/{binaries,results,scripts,logs,configs,packages,extracted,kernel-modules}

# Create package analysis user
RUN useradd -m -s /bin/bash pkg-analyst && \
    usermod -aG sudo pkg-analyst && \
    echo "pkg-analyst ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Create package-specific analysis scripts
COPY scripts/analyze-deb-package.sh /usr/local/bin/
COPY scripts/analyze-rpm-package.sh /usr/local/bin/
COPY scripts/analyze-kernel-module.sh /usr/local/bin/
COPY scripts/extract-package-contents.sh /usr/local/bin/
COPY scripts/analyze-snap-package.sh /usr/local/bin/
COPY scripts/analyze-appimage.sh /usr/local/bin/

# Set ownership and permissions
RUN chown -R pkg-analyst:pkg-analyst /analysis /home/pkg-analyst && \
    chmod +x /usr/local/bin/*.sh

# Create kernel module analysis environment
RUN mkdir -p /lib/modules/$(uname -r) && \
    depmod -a || true

# Switch to analysis user
USER pkg-analyst
WORKDIR /analysis

# Set environment variables
ENV PATH="/home/pkg-analyst/.local/bin:$PATH"
ENV PYTHONPATH="/analysis:$PYTHONPATH"
ENV ANALYSIS_TYPE="linux-packages"
ENV SUPPORTED_FORMATS="deb,rpm,ko,kernel-module,snap,appimage"
ENV GHIDRA_INSTALL_DIR="/opt/ghidra"

# Create analysis configuration
RUN echo '#!/bin/bash\n\
echo "=== QuantumSentinel Linux Package Analysis Environment ==="\n\
echo "Supported formats: $SUPPORTED_FORMATS"\n\
echo "Package tools: dpkg, rpm2cpio, alien, squashfs-tools"\n\
echo "Kernel tools: modinfo, objdump, volatility3"\n\
echo "Analysis tools: ghidra, radare2, binwalk, lief"\n\
echo "Usage:"\n\
echo "  - analyze-deb-package.sh <deb_path>"\n\
echo "  - analyze-rpm-package.sh <rpm_path>"\n\
echo "  - analyze-kernel-module.sh <ko_path>"\n\
echo "  - analyze-snap-package.sh <snap_path>"\n\
echo "  - analyze-appimage.sh <appimage_path>"\n\
echo "============================================================"\n\
' > /home/pkg-analyst/.bashrc_custom && \
    echo "source /home/pkg-analyst/.bashrc_custom" >> /home/pkg-analyst/.bashrc

# Create kernel module analysis workspace
RUN mkdir -p /home/pkg-analyst/{kernel-workspace,firmware-workspace} && \
    echo "export KERNEL_SRC=/usr/src/linux-headers-$(uname -r)" >> /home/pkg-analyst/.bashrc

# Expose debugging and analysis ports
EXPOSE 1234 4444 8080 8888

CMD ["/bin/bash"]